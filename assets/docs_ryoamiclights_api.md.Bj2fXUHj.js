import{_ as i,c as s,o as a,a3 as e}from"./chunks/framework.DPJMMpX9.js";const E=JSON.parse('{"title":"RyoamicLights APIs","description":"","frontmatter":{},"headers":[],"relativePath":"docs/ryoamiclights/api.md","filePath":"docs/ryoamiclights/api.md"}'),t={name:"docs/ryoamiclights/api.md"},n=e(`<h1 id="ryoamiclights-apis" tabindex="-1">RyoamicLights APIs <a class="header-anchor" href="#ryoamiclights-apis" aria-label="Permalink to &quot;RyoamicLights APIs&quot;">​</a></h1><h2 id="quick-note" tabindex="-1">Quick note <a class="header-anchor" href="#quick-note" aria-label="Permalink to &quot;Quick note&quot;">​</a></h2><p>Every time an entity is referenced it means either an entity or a block entity.</p><p>Block entity dynamic lighting is non-recommended if avoidable with block states.</p><p>If your entity re-implements tick without calling the super method the dynamic light handler will not work.</p><h2 id="entrypoint" tabindex="-1">Entrypoint <a class="header-anchor" href="#entrypoint" aria-label="Permalink to &quot;Entrypoint&quot;">​</a></h2><p>Any API calls should be done in the custom entrypoint.</p><h3 id="fabric-side" tabindex="-1">Fabric side <a class="header-anchor" href="#fabric-side" aria-label="Permalink to &quot;Fabric side&quot;">​</a></h3><p>To use the entrypoint, make a new class implementing <code>DynamicLightsInitializer</code>, add in your <code>fabric.mod.json</code> this:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;entrypoints&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;dynamiclights&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      &quot;path.to.your.Class&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p>Once done, you can call the methods presented in the rest of this document in the method <code>onInitializeDynamicLights</code>.</p><h3 id="neo-forge-side" tabindex="-1">(Neo)Forge side <a class="header-anchor" href="#neo-forge-side" aria-label="Permalink to &quot;(Neo)Forge side&quot;">​</a></h3><p>The (Neo)Forge side uses event instead of Entrypoint.</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SubscribeEvent</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onInitializeDynamicLights</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DynamicLightsInitializerEvent event) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="dynamic-light-handlers" tabindex="-1">Dynamic light handlers <a class="header-anchor" href="#dynamic-light-handlers" aria-label="Permalink to &quot;Dynamic light handlers&quot;">​</a></h2><h3 id="dynamiclighthandler" tabindex="-1"><code>DynamicLightHandler</code> <a class="header-anchor" href="#dynamiclighthandler" aria-label="Permalink to &quot;\`DynamicLightHandler\`&quot;">​</a></h3><p>A dynamic light handler is an interface with different methods:</p><ul><li><code>int getLuminance(T lightSource)</code></li><li><code>boolean isWaterSensitive(T lightSource)</code> - with default <code>false</code></li></ul><p>The returned value is between 0 and 15 which are luminance values, <code>lightSource</code> is of the type of the entity and is the targeted entity. The method is called for every entity matching the type at each tick.</p><h3 id="dynamiclighthandlers" tabindex="-1"><code>DynamicLightHandlers</code> <a class="header-anchor" href="#dynamiclighthandlers" aria-label="Permalink to &quot;\`DynamicLightHandlers\`&quot;">​</a></h3><p>That&#39;s where you register your handler!</p><p>Just call <code>DynamicLightHandlers#registerDynamicLightHandler(EntityType&lt;T&gt;, DynamicLightHandler&lt;T&gt;)</code> or <code>DynamicLightHandlers#registerDynamicLightHandler(BlockEntityType&lt;T&gt;, DynamicLightHandler&lt;T&gt;)</code> to register your handler!</p><p>If a handler is already registered for this entity, then it will merge the two handlers with a <code>Math#max</code> handler.</p><p>And that&#39;s all! The mod will light up your entities following your handler.</p><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><h4 id="blaze" tabindex="-1">Blaze <a class="header-anchor" href="#blaze" aria-label="Permalink to &quot;Blaze&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerDynamicLightHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EntityType.BLAZE, DynamicLightHandler.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">makeHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(blaze </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, blaze </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div><h4 id="enderman" tabindex="-1">Enderman <a class="header-anchor" href="#enderman" aria-label="Permalink to &quot;Enderman&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerDynamicLightHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EntityType.ENDERMAN, entity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> luminance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (entity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCarriedBlock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        luminance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCarriedBlock</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLuminance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> luminance;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="item-frame" tabindex="-1">Item frame <a class="header-anchor" href="#item-frame" aria-label="Permalink to &quot;Item frame&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerDynamicLightHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(EntityType.ITEM_FRAME, entity </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    World world </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEntityWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RyoamicLights.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLuminanceFromItemStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(entity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHeldItemStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">world.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFluidState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(entity.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBlockPos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="utility-methods" tabindex="-1">Utility methods <a class="header-anchor" href="#utility-methods" aria-label="Permalink to &quot;Utility methods&quot;">​</a></h2><ul><li><code>DynamicLightHandler#makeHandler</code> will transforms 2 functions into an handler.</li><li><code>DynamicLightHandler#makeLivingEntityHandler</code> will merge the given handler with a basic handler for living entity which detects item light sources.</li><li><code>DynamicLightHandler#makeCreeperEntityHandler</code> will optionally merge the given handler with a basic handler for creepers. May be useful for Creepers mod.</li><li><code>RyoamicLights#getLuminanceFromItemStack</code> will return the luminance value of the given item stack.</li></ul><h2 id="item-light-sources" tabindex="-1">Item light sources <a class="header-anchor" href="#item-light-sources" aria-label="Permalink to &quot;Item light sources&quot;">​</a></h2><p>By default every items will emit the same amount of light as their assigned block if possible.</p><p>But for items that are not assigned to a block, or for items that should not lit up underwater, there&#39;s JSON files to write!</p><p>The JSONs are located in <code>&lt;modid&gt;:dynamiclights/item/&lt;file&gt;.json</code>.</p><h3 id="json-item-light-source" tabindex="-1">JSON item light source <a class="header-anchor" href="#json-item-light-source" aria-label="Permalink to &quot;JSON item light source&quot;">​</a></h3><p>The format is simple:</p><ul><li><code>item</code> - The identifier of the affected item.</li><li><code>luminance</code> - Either a number between <code>0</code> and <code>15</code> and corresponds to the luminance value, or is a string with either a block identifier to get the luminance from or <code>&quot;block&quot;</code> to use the default assigned block luminance value.</li><li><code>water_sensitive</code> <em>(Optional)</em> - <code>true</code> if the item doesn&#39;t emit light when submerged in water, else <code>false</code>.</li></ul><h4 id="examples-1" tabindex="-1">Examples <a class="header-anchor" href="#examples-1" aria-label="Permalink to &quot;Examples&quot;">​</a></h4><h5 id="ryoamiclights-dynamiclights-item-fire-charge-json" tabindex="-1"><code>ryoamiclights:dynamiclights/item/fire_charge.json</code> <a class="header-anchor" href="#ryoamiclights-dynamiclights-item-fire-charge-json" aria-label="Permalink to &quot;\`ryoamiclights:dynamiclights/item/fire_charge.json\`&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:fire_charge&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;luminance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;water_sensitive&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="ryoamiclights-dynamiclights-item-lava-bucket-json" tabindex="-1"><code>ryoamiclights:dynamiclights/item/lava_bucket.json</code> <a class="header-anchor" href="#ryoamiclights-dynamiclights-item-lava-bucket-json" aria-label="Permalink to &quot;\`ryoamiclights:dynamiclights/item/lava_bucket.json\`&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:lava_bucket&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;luminance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:lava&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;water_sensitive&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="ryoamiclights-dynamiclights-item-nether-star-json" tabindex="-1"><code>ryoamiclights:dynamiclights/item/nether_star.json</code> <a class="header-anchor" href="#ryoamiclights-dynamiclights-item-nether-star-json" aria-label="Permalink to &quot;\`ryoamiclights:dynamiclights/item/nether_star.json\`&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:nether_star&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;luminance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="ryoamiclights-dynamiclights-item-torch-json" tabindex="-1"><code>ryoamiclights:dynamiclights/item/torch.json</code> <a class="header-anchor" href="#ryoamiclights-dynamiclights-item-torch-json" aria-label="Permalink to &quot;\`ryoamiclights:dynamiclights/item/torch.json\`&quot;">​</a></h5><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;minecraft:torch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;luminance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;water_sensitive&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,49),l=[n];function h(r,p,d,o,k,c){return a(),s("div",null,l)}const y=i(t,[["render",h]]);export{E as __pageData,y as default};
